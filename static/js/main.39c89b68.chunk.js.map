{"version":3,"sources":["Header/Header.js","SearchBar/SearchBar.js","NomineeCard/NomineeCard.js","CompletionBanner/CompletionBanner.js","NomineePanel/NomineePanel.js","SearchListItem/SearchListItem.js","SearchPreview/SearchPreview.js","SearchList/SearchList.js","Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","props","searchApi","callStatus","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","type","placeholder","value","onChange","target","aria-label","NomineeCard","id","title","year","poster","removeNominee","alt","src","onClick","CompletionBanner","resetNoms","saveNoms","NomineePanel","nominees","setNominees","fillPlaceholders","bannerView","setBannerView","useEffect","filter","nominee","imdbID","map","Title","Year","Poster","reset","localStorage","removeItem","setItem","JSON","stringify","SearchListItem","handleClick","SearchPreview","searchPreview","previewData","userChoices","duplicateCheck","nomsRemaining","updatedNominees","push","SearchList","searchList","setSearchPreview","updatePosterSize","selectedFilm","film","updatedArray","Footer","href","App","setCallStatus","setSearchList","data","updatedUrl","replace","arr","i","theShoppies","savedNoms","parse","getItem","placeholderArray","searchTerm","apiUrl","process","axios","get","then","resp","status","Response","Search","defaultPreview","newPosterData","catch","error","window","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39c89b68.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nconst Header = () => {\n\n    return (\n        <header>\n            <div className=\"wrapper\">\n                <h1>The Shoppies</h1>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport \"./SearchBar.scss\";\n\nconst SearchBar = (props) => {\n\n    // destructuring the props\n    const { searchApi, callStatus } = props;\n    // holding the search value as it's typed in state\n    const [inputValue, setInputValue] = useState('');\n\n    const searchSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.length > 0) {\n            searchApi(inputValue);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <section className=\"searchBar\">\n            <div className=\"wrapper\">\n                <p>Search by film title below to nominate your all-time favourites for the 2021 Shoppie Awards!</p>\n                <form onSubmit={searchSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder={\"search by film title\"}\n                        value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}\n                        aria-label=\"Search by film title\"\n                    />\n                    <input type=\"submit\" value=\"SEARCH\" />\n                </form>\n                {\n                    callStatus === \"False\" && \n                    <p className=\"error\">Your search did not return any results. Try another film title!</p>\n                }\n            </div>\n        </section>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\n\nconst NomineeCard = (props) => {\n\n    const { id, title, year, poster, removeNominee } = props;\n    const alt = `${title} poster`;\n\n    return (\n        <li>\n            {\n                id ?\n                <div className=\"figureContainer\">\n                    <figure>\n                        <img src={poster} alt={alt} />\n                        <figcaption>{title} ({year})</figcaption>\n                    </figure>\n                    <button className=\"primary\" onClick={() => removeNominee(id)}>REMOVE</button>\n                </div>\n                :\n                <div className=\"figureContainer\">\n                    <div className=\"trophy\"></div>\n                </div>                \n            }\n        </li>\n    )\n}\n\nexport default NomineeCard;","import React from 'react';\nimport \"./CompletionBanner.scss\";\n\nconst CompletionBanner = (props) => {\n\n    const { resetNoms, saveNoms } = props;\n\n    return (\n        <div className=\"completionBanner\">\n            <div className=\"wrapper\">\n                <h4>Your nominations are complete!</h4>\n                <p>Not sure if you've got the right picks yet? Very sure?</p>\n                <p>Lock in your nominations below or reset to start fresh!</p>\n                <button className=\"primary\" onClick={saveNoms}>SAVE</button>\n                <button className=\"primary\" onClick={resetNoms}>RESET</button>\n            </div>\n        </div>\n    )\n}\n\nexport default CompletionBanner;","import React, { useState, useEffect } from 'react';\nimport NomineeCard from '../NomineeCard/NomineeCard';\nimport CompletionPanel from '../CompletionBanner/CompletionBanner';\nimport \"./NomineePanel.scss\";\n\nconst NomineePanel = (props) => {\n    const { nominees, setNominees, removeNominee, fillPlaceholders } = props;\n    const [bannerView, setBannerView] = useState(false);\n\n    useEffect(() => {\n        const nomCount = nominees.filter(nominee => nominee.imdbID);\n        if (nomCount.length === 5) {\n            setBannerView(true);\n        } else {\n            setBannerView(false);\n        }\n    }, [nominees]);\n\n    const resetNoms = () => {\n        let reset = [];\n        reset = fillPlaceholders(reset)\n        setNominees(reset);\n        localStorage.removeItem('theShoppies');\n    }\n\n    const saveNoms = () => {\n        localStorage.setItem(\"theShoppies\", JSON.stringify(nominees));\n    }\n\n    return (\n        <section className=\"nomineePanel\">\n            <div className=\"wrapper\">\n                <h2>Your Shoppie Nominees:</h2>\n                <ul>\n                    {nominees.map((nominee) => {\n                        return (\n                            <NomineeCard \n                                key={nominee.imdbID}\n                                id={nominee.imdbID}\n                                title={nominee.Title}\n                                year={nominee.Year}\n                                poster={nominee.Poster}\n                                removeNominee={removeNominee}\n                            />\n                        )})\n                    }\n                </ul>\n            </div>\n            {\n                bannerView === true &&\n                <CompletionPanel\n                    resetNoms={resetNoms}\n                    saveNoms={saveNoms}\n                />\n            }\n        </section>\n    )\n}\n\nexport default NomineePanel;","import React from 'react';\n\nconst SearchListItem = (props) => {\n\n    const { id, title, year, handleClick } = props;\n\n return (\n     <li>\n         <button className=\"secondary\" onClick={() => handleClick(id)}>\n            {title} ({year})\n         </button>\n     </li>\n )\n}\n\nexport default SearchListItem;","import React from 'react';\n\nconst SearchPreview = (props) => {\n\n    const { searchPreview, nominees, setNominees, fillPlaceholders } = props;\n    \n    const previewData = searchPreview[0]\n    const alt = `${previewData.Title} poster`;\n\n    const addNominee = () => {\n        let updatedNominees = [...nominees];\n        updatedNominees = updatedNominees.filter(nominee => nominee.imdbID);\n        updatedNominees.push(searchPreview[0]);\n        updatedNominees = fillPlaceholders(updatedNominees);\n        setNominees(updatedNominees);\n    }\n\n    const userChoices = nominees.filter(nominee => nominee.imdbID)\n    const duplicateCheck = userChoices.filter(nominee => nominee.imdbID === previewData.imdbID)\n    const nomsRemaining = 5 - userChoices.length;\n\n    return (\n        <div>\n            <img src={previewData.Poster} alt={alt}/>\n            <p><span className=\"heading\">Title:</span> {previewData.Title}</p>\n            <p><span className=\"heading\">Year:</span> {previewData.Year}</p>\n            {\n                userChoices.length < 5 && duplicateCheck.length === 0 &&\n                <button className=\"primary\" onClick={addNominee}>NOMINATE</button>\n            }\n            <div className=\"warnings\">\n                {\n                    duplicateCheck.length > 0 &&\n                    <button className=\"primary\">NOMINATED</button>\n                }\n                {\n                    nomsRemaining === 1 \n                    ? <p>You have <span className=\"nomRemaining\">{nomsRemaining}</span> nomination remaining.</p>\n                    : <p>You have <span className=\"nomRemaining\">{nomsRemaining}</span> nominations remaining.</p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default SearchPreview;","import React from 'react';\nimport SearchListItem from \"../SearchListItem/SearchListItem\";\nimport SearchPreview from \"../SearchPreview/SearchPreview\";\nimport \"./SearchList.scss\";\n\nconst SearchList = (props) => {\n\n    const { searchList, searchPreview, setSearchPreview, nominees, setNominees, \n            updatePosterSize, fillPlaceholders } = props;\n\n    const handleClick = (id) => {\n        const selectedFilm = searchList.filter(film => film.imdbID === id);\n        const updatedArray = updatePosterSize(selectedFilm)\n        setSearchPreview(updatedArray);\n    }\n\n    return (\n        <section className=\"searchListContainer\">\n            <div className=\"wrapper\">\n                {searchList.length > 0 &&\n                    <div className=\"col col-1\">\n                        <h3>Your Search Results:</h3>\n                        <ul>\n                            { searchList.map((film) => {\n                                return (\n                                    <SearchListItem\n                                        key={film.imdbID}\n                                        id={film.imdbID}\n                                        title={film.Title}\n                                        year={film.Year}\n                                        handleClick={handleClick}\n                                    />\n                                )})\n                            }\n                        </ul>\n                    </div>\n                }\n                {searchPreview.length > 0 &&\n                    <div className=\"col col-2\">\n                        <SearchPreview\n                            searchPreview={searchPreview}\n                            nominees={nominees}\n                            setNominees={setNominees}\n                            fillPlaceholders={fillPlaceholders}\n                        />\n                    </div>\n                }\n            </div>\n        </section>\n    )\n}\n\nexport default SearchList;","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n\n    return (\n        <footer>\n            <div className=\"wrapper\">\n                <p><a href=\"http://www.rubybantock.com\">Ruby Bantock</a> | Future Intern | 2021</p>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport axios from 'axios';\nimport Header from './Header/Header';\nimport SearchBar from './SearchBar/SearchBar';\nimport NomineePanel from './NomineePanel/NomineePanel';\nimport SearchList from './SearchList/SearchList';\nimport Footer from './Footer/Footer';\n\nfunction App() {\n\n  const apiKey = process.env.REACT_APP_API_KEY;\n  // holds the value currently in the search field\n  const [callStatus, setCallStatus] = useState(false);\n  // holds the array of films from search\n  const [searchList, setSearchList] = useState([]);\n  // holds the film object selected for preview\n  const [searchPreview, setSearchPreview] = useState([]);\n  // holds films added to array of nominees\n  const [nominees, setNominees] = useState([]);\n\n  const searchApi = (searchTerm) => {\n    const apiUrl = `https://www.omdbapi.com/?apikey=${apiKey}&type=movie&s=${searchTerm}`\n\n    axios.get(apiUrl).then((resp) => {\n      const status = resp.data.Response;\n      if (status === \"True\") {\n        setCallStatus(status);\n        setSearchList(resp.data.Search);\n        const defaultPreview = [...resp.data.Search];\n        defaultPreview.length = 1;\n        const newPosterData = updatePosterSize(defaultPreview)\n        setSearchPreview(newPosterData);\n      } else {\n        setCallStatus(status);\n      }\n    }).catch(error => {\n      window.alert(`${error} occurred. Please try your request again.`)\n    })\n  }\n\n  const removeNominee = (id) => {\n    let updatedNominees = nominees.filter(nominee => nominee.imdbID && nominee.imdbID !== id)\n    updatedNominees = fillPlaceholders(updatedNominees)\n    setNominees(updatedNominees);\n  }\n\n  const updatePosterSize = (data) => {\n    const url = data[0].Poster;\n    const updatedUrl = url.replace(\"300\", \"425\");\n    data[0].Poster = updatedUrl;\n    return data;\n  }\n\n  const fillPlaceholders = (arr) => {\n    for (let i = arr.length + 1; i < 6; i++) {\n      arr.push({});\n    }\n    return arr;\n  }\n\n  useEffect(() => {\n    if (localStorage.theShoppies) {\n      const savedNoms = JSON.parse(localStorage.getItem(\"theShoppies\"));\n      setNominees(savedNoms)\n    } else {\n      const placeholderArray = [];\n      for (let i = 0; i < 5; i++) {\n        placeholderArray.push({})\n      }\n      setNominees(placeholderArray);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <NomineePanel\n          nominees={nominees}\n          setNominees={setNominees}\n          removeNominee={removeNominee}\n          fillPlaceholders={fillPlaceholders}\n        />\n        <SearchBar \n          searchApi={searchApi}\n          callStatus={callStatus}\n        />\n        { (searchList.length > 0) &&\n          <SearchList \n            searchList={searchList}\n            searchPreview={searchPreview}\n            setSearchPreview={setSearchPreview}\n            nominees={nominees}\n            setNominees={setNominees}\n            updatePosterSize={updatePosterSize}\n            fillPlaceholders={fillPlaceholders}\n          />\n        }\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}